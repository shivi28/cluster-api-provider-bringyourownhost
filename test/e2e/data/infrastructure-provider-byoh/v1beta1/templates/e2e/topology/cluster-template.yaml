apiVersion: v1
binaryData: null
data: ${CNI_RESOURCES}
kind: ConfigMap
metadata:
  name: cni-${CLUSTER_NAME}-crs-0
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: ${CLUSTER_NAME}-crs-0
spec:
  clusterSelector:
    matchLabels:
      cni: ${CLUSTER_NAME}-crs-0
  resources:
  - kind: ConfigMap
    name: cni-${CLUSTER_NAME}-crs-0
  strategy: ApplyOnce
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cgroup-driver: cgroupfs
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    cni: ${CLUSTER_NAME}-crs-0
    crs: "true"
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.128.0.0/12
  topology:
    class: ${CLUSTER_CLASS_NAME}
    controlPlane:
      metadata: {}
      replicas: 1
    variables:
    - name: bundleLookupBaseRegistry
      value: projects.registry.vmware.com/cluster_api_provider_bringyourownhost
    - name: controlPlaneIpAddr
      value: ${CONTROL_PLANE_ENDPOINT}
    - name: kubeVipPodManifest
      value: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: cp_enable
              value: "true"
            - name: vip_arp
              value: "true"
            - name: vip_leaderelection
              value: "true"
            - name: vip_address
              value: ${CONTROL_PLANE_ENDPOINT}
            - name: vip_interface
              value: "{{ .DefaultNetworkInterfaceName }}"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            image: ghcr.io/kube-vip/kube-vip:v0.4.1
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          hostAliases:
            - hostnames:
                - kubernetes
              ip: 127.0.0.1
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
              type: FileOrCreate
            name: kubeconfig
        status: {}
    version: ${KUBERNETES_VERSION}
    workers:
      machineDeployments:
      - class: ${CLUSTER_CLASS_NAME}-worker
        metadata: {}
        name: md-0
        replicas: 1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: ${CLUSTER_CLASS_NAME}
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ByoMachineTemplate
        name: ${CLUSTER_CLASS_NAME}-control-plane-machine
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: ${CLUSTER_CLASS_NAME}-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ByoClusterTemplate
      name: ${CLUSTER_CLASS_NAME}-cluster
  patches:
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/bundleLookupBaseRegistry
        valueFrom:
          variable: bundleLookupBaseRegistry
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ByoClusterTemplate
        matchResources:
          infrastructureCluster: true
    description: Sets the bundleLookupBaseRegistry used for the BYOCluster.
    name: bundleLookupBaseRegistry
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/controlPlaneEndpoint
        valueFrom:
          template: |
            host: '{{ .controlPlaneIpAddr }}'
            port: 6443
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ByoClusterTemplate
        matchResources:
          infrastructureCluster: true
    description: Sets control plane endpoint
    name: controlPlaneEndpoint
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/files/0/content
        valueFrom:
          variable: kubeVipPodManifest
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    name: kubeVipEnabled
  variables:
  - name: bundleLookupBaseRegistry
    required: true
    schema:
      openAPIV3Schema:
        default: https://projects.registry.vmware.com/cluster_api_provider_bringyourownhost
        type: string
  - name: controlPlaneIpAddr
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: kubeVipPodManifest
    required: true
    schema:
      openAPIV3Schema:
        description: kube-vip manifest for the control plane.
        type: string
  workers:
    machineDeployments:
    - class: ${CLUSTER_CLASS_NAME}-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: ByoMachineTemplate
            name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            certSANs:
            - localhost
            - 127.0.0.1
            - 0.0.0.0
            - host.docker.internal
          controllerManager:
            extraArgs:
              enable-hostpath-provisioner: "true"
        files:
        - owner: root:root
          path: /etc/kubernetes/manifests/kube-vip.yaml
        initConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            ignorePreflightErrors:
            - Swap
            - DirAvailable--etc-kubernetes-manifests
            - FileAvailable--etc-kubernetes-kubelet.conf
            kubeletExtraArgs:
              cgroup-driver: cgroupfs
              eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
        joinConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            ignorePreflightErrors:
            - Swap
            - DirAvailable--etc-kubernetes-manifests
            - FileAvailable--etc-kubernetes-kubelet.conf
            kubeletExtraArgs:
              cgroup-driver: cgroupfs
              eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoClusterTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-cluster
spec:
  template:
    spec: {}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
  namespace: default
spec:
  template:
    spec: {}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-control-plane-machine
spec:
  template:
    spec: {}

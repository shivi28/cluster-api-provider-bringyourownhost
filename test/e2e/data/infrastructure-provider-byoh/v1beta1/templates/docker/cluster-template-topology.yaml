---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    services:
      cidrBlocks:
        - 10.128.0.0/12
    pods:
      cidrBlocks:
        - 192.168.0.0/16
    serviceDomain: cluster.local
  topology:
    class: ${CLUSTER_CLASS_NAME}
    version: ${KUBERNETES_VERSION}
    controlPlane:
      metadata: {}
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
    variables:
      - name: bundleLookupBaseRegistry
        value: "projects.registry.vmware.com/cluster_api_provider_bringyourownhost"
      - name: controlPlaneIpAddr
        value: ${CONTROL_PLANE_ENDPOINT_IP}
      - name: kubeVipPodManifest
        value: |
          apiVersion: v1
          kind: Pod
          metadata:
            creationTimestamp: null
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - manager
              env:
              - name: cp_enable
                value: "true"
              - name: vip_arp
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: vip_address
                value: ${CONTROL_PLANE_ENDPOINT_IP}
              - name: vip_interface
                value: "{{ .DefaultNetworkInterfaceName }}"
              - name: vip_leaseduration
                value: "15"
              - name: vip_renewdeadline
                value: "10"
              - name: vip_retryperiod
                value: "2"
              image: ghcr.io/kube-vip/kube-vip:v0.4.1
              imagePullPolicy: IfNotPresent
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostNetwork: true
            hostAliases:
              - hostnames:
                  - kubernetes
                ip: 127.0.0.1
            volumes:
            - hostPath:
                path: /etc/kubernetes/admin.conf
                type: FileOrCreate
              name: kubeconfig
          status: {}
    workers:
      machineDeployments:
        - class: ${CLUSTER_CLASS_NAME}-worker
          metadata: {}
          name: md-0
          replicas: ${WORKER_MACHINE_COUNT}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: ${CLUSTER_CLASS_NAME}
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: ${CLUSTER_CLASS_NAME}-control-plane
    machineInfrastructure:
      ref:
        kind: ByoMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        name: ${CLUSTER_CLASS_NAME}-control-plane-machine
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ByoClusterTemplate
      name: ${CLUSTER_CLASS_NAME}-cluster
  workers:
    machineDeployments:
      - class: ${CLUSTER_CLASS_NAME}-worker
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
              kind: KubeadmConfigTemplate
              name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: ByoMachineTemplate
              name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
  variables:
    - name: bundleLookupBaseRegistry
      required: true
      schema:
        openAPIV3Schema:
          type: string
          default: "https://projects.registry.vmware.com/cluster_api_provider_bringyourownhost"
    - name: controlPlaneIpAddr
      required: true
      schema:
        openAPIV3Schema:
          type: string
    - name: kubeVipPodManifest
      required: true
      schema:
        openAPIV3Schema:
          description: kube-vip manifest for the control plane.
          type: string
  patches:
    - name: bundleLookupBaseRegistry
      description: "Sets the bundleLookupBaseRegistry used for the BYOCluster."
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: ByoClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: "/spec/template/spec/bundleLookupBaseRegistry"
              valueFrom:
                variable: bundleLookupBaseRegistry
    - name: controlPlaneEndpoint
      description: "Sets control plane endpoint"
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: ByoClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: "/spec/template/spec/controlPlaneEndpoint"
              valueFrom:
                template: |
                  host: '{{ .controlPlaneIpAddr }}'
                  port: 6443
    - name: kubeVipEnabled
      definitions:
        - jsonPatches:
            - op: add
              path: /spec/template/spec/kubeadmConfigSpec/files/0/content
              valueFrom:
                variable: kubeVipPodManifest
          selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlaneTemplate
            matchResources:
              controlPlane: true
---
kind: KubeadmControlPlaneTemplate
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  labels:
    nodepool: pool0
  name: ${CLUSTER_CLASS_NAME}-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            certSANs:
              - localhost
              - 127.0.0.1
              - 0.0.0.0
              - host.docker.internal
          controllerManager:
            extraArgs:
              enable-hostpath-provisioner: "true"
        files:
          - owner: root:root
            path: /etc/kubernetes/manifests/kube-vip.yaml
        initConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            ignorePreflightErrors:
              - Swap
              - DirAvailable--etc-kubernetes-manifests
              - FileAvailable--etc-kubernetes-kubelet.conf
            kubeletExtraArgs:
              cgroup-driver: cgroupfs
              eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
        joinConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            ignorePreflightErrors:
              - Swap
              - DirAvailable--etc-kubernetes-manifests
              - FileAvailable--etc-kubernetes-kubelet.conf
            kubeletExtraArgs:
              cgroup-driver: cgroupfs
              eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-control-plane-machine
spec:
  template:
    spec:
      installerRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: K8sInstallerConfigTemplate
        name: ${CLUSTER_CLASS_NAME}-control-plane-machine
        namespace: ${NAMESPACE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: K8sInstallerConfigTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-control-plane-machine
spec:
  template:
    spec:
      bundleRepo: projects.registry.vmware.com/cluster_api_provider_bringyourownhost
      bundleType: k8s
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoClusterTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-cluster
spec:
  template:
    spec: {}

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ByoMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
spec:
  template:
    spec:
      installerRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: K8sInstallerConfigTemplate
        name: ${CLUSTER_NAME}-md-0
        namespace: ${NAMESPACE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: K8sInstallerConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      bundleRepo: projects.registry.vmware.com/cluster_api_provider_bringyourownhost
      bundleType: k8s
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cgroup-driver: cgroupfs
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
---
